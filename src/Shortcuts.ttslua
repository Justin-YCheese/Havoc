--[[
Shortcut.ttslua START

This file contains shortcut-related functions.
]]

function setupShortcuts()
  addHotkey('Draw Card', drawCardShortcut)
  addHotkey('Get Discard Sum', getDiscardSumShortcut)
  addHotkey('Get My Sum', getMySumShortcut)
  addHotkey("Get Opponent's Sum", getOpponentSumShortcut)
end

-- Draw a card for player when hotkey is pressed
function drawCardShortcut(playerColor)
  local shortcutName = "Draw Card"

  if hasGameStarted(shortcutName) == false or isValidColor(playerColor, shortcutName) == false then
    return
  end

  log("Shortcut: deal a card to " .. playerColor .. " player")
  dealDeck(1, playerColor)
end

-- Show sum of points in discard if hotkey is pressed
function getDiscardSumShortcut()
  local shortcutName = "Get Discard Sum"

  if hasGameStarted(shortcutName) == false then
    return
  end

  log("Shortcut: get discard point sum")
  discardZone.call('calculatePoints')
end

-- Show sum of points in player's win pile if hotkey is pressed
function getMySumShortcut(playerColor)
  local shortcutName = "Get My Sum"

  if hasGameStarted(shortcutName) == false or isValidColor(playerColor, shortcutName) == false then
    return
  end

  log("Shortcut: get my point sum")
  players[playerColor].winPile.call('calculatePoints')
end

-- Show sum of points in opponent's win pile if hotkey is pressed
function getOpponentSumShortcut(playerColor)
  local shortcutName = "Get Opponent Sum"

  if hasGameStarted(shortcutName) == false or isValidColor(playerColor, shortcutName) == false then
    return
  end

  local opponentZone = nil
  if playerColor == 'Orange' then
    opponentZone = players['Blue'].winPile
  else
    opponentZone = players['Orange'].winPile
  end

  log("Shortcut: get opponent point sum")
  opponentZone.call('calculatePoints')
end

--[[
Shortcuts.ttslua END
]]
